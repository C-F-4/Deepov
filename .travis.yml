language: cpp

compiler:
  - gcc
 
env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "d4uTz/+DeRHDEOmStYmarJKMhWbMWoepZ7PG+DXHDFhlKhZi1flet0SJlEf+A/vNhw5T98JDtzk3VTm3ofK2Z76r5Ia7LI92uCLrKtBGlbvsGv8jTTFVZ3GduLpu/aOF6uZoXTTCP88PrbLvoXAtbRtf+qLlpFyYaQlN56c/XG0="

addons:
  coverity_scan:
    project:
      name: "RomainGoussault/Deepov"
      description: "Open Source C++ Chess Engine"
    notification_email: romain.goussault@gmail.com
    build_command_prepend: "mkdir obj"
    build_command: "make"
    branch_pattern: master
 

before_install:
 # g++
 - if [ "$CXX" == "g++" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi
 - sudo add-apt-repository -y ppa:boost-latest/ppa;
 - sudo apt-get update -qq

install:
  # g++
  - if [ "$CXX" = "g++" ]; then sudo apt-get install -qq g++-5; fi
    # g++ 4.8 is needed to build the old releases
  - if [ "$CXX" = "g++" ]; then sudo apt-get install -qq g++-4.8; fi
  - if [ "$CXX" = "g++" ]; then export CXX="g++-5"; fi
  
  # Boost
  - sudo apt-get install libboost1.54-all-dev

  # Valgrind
  - sudo apt-get install valgrind
  
before_script:
  - $CXX --version
  - echo "CXX="$CXX
  - mkdir obj
  
script: 
  - make
  - ./DeepovTesting 
 # valgrind --leak-check=full --show-reachable=yes --track-origins=yes --error-exitcode=1  ./DeepovTesting exclude:perft
  - cd test/EloRegressionTest/
  - ./eloRegressionTest.sh

 
notifications:
  email:
    recipients:
      - navid.hedjazian@gmail.com
      - romain.goussault@gmail.com
